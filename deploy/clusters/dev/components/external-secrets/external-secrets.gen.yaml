apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets
  namespace: external-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-cert-controller
  namespace: external-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-webhook
  namespace: external-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-leaderelection
  namespace: external-secrets
rules:
- apiGroups:
  - ""
  resourceNames:
  - external-secrets-controller
  resources:
  - configmaps
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-cert-controller
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - secretstore-validate
  - externalsecret-validate
  resources:
  - validatingwebhookconfigurations
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-controller
rules:
- apiGroups:
  - external-secrets.io
  resources:
  - secretstores
  - clustersecretstores
  - externalsecrets
  - clusterexternalsecrets
  - pushsecrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - external-secrets.io
  resources:
  - externalsecrets
  - externalsecrets/status
  - externalsecrets/finalizers
  - secretstores
  - secretstores/status
  - secretstores/finalizers
  - clustersecretstores
  - clustersecretstores/status
  - clustersecretstores/finalizers
  - clusterexternalsecrets
  - clusterexternalsecrets/status
  - clusterexternalsecrets/finalizers
  - pushsecrets
  - pushsecrets/status
  - pushsecrets/finalizers
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - generators.external-secrets.io
  resources:
  - acraccesstokens
  - clustergenerators
  - ecrauthorizationtokens
  - fakes
  - gcraccesstokens
  - githubaccesstokens
  - passwords
  - stssessiontokens
  - uuids
  - vaultdynamicsecrets
  - webhooks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - external-secrets.io
  resources:
  - externalsecrets
  verbs:
  - create
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: external-secrets-edit
rules:
- apiGroups:
  - external-secrets.io
  resources:
  - externalsecrets
  - secretstores
  - clustersecretstores
  - pushsecrets
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - generators.external-secrets.io
  resources:
  - acraccesstokens
  - clustergenerators
  - ecrauthorizationtokens
  - fakes
  - gcraccesstokens
  - githubaccesstokens
  - passwords
  - vaultdynamicsecrets
  - webhooks
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
    servicebinding.io/controller: "true"
  name: external-secrets-servicebindings
rules:
- apiGroups:
  - external-secrets.io
  resources:
  - externalsecrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: external-secrets-view
rules:
- apiGroups:
  - external-secrets.io
  resources:
  - externalsecrets
  - secretstores
  - clustersecretstores
  - pushsecrets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - generators.external-secrets.io
  resources:
  - acraccesstokens
  - clustergenerators
  - ecrauthorizationtokens
  - fakes
  - gcraccesstokens
  - githubaccesstokens
  - passwords
  - vaultdynamicsecrets
  - webhooks
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-leaderelection
  namespace: external-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-secrets-leaderelection
subjects:
- kind: ServiceAccount
  name: external-secrets
  namespace: external-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-cert-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-cert-controller
subjects:
- kind: ServiceAccount
  name: external-secrets-cert-controller
  namespace: external-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-controller
subjects:
- kind: ServiceAccount
  name: external-secrets
  namespace: external-secrets
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    external-secrets.io/component: webhook
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-webhook
  namespace: external-secrets
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    external-secrets.io/component: webhook
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-webhook
  namespace: external-secrets
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 10250
  selector:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/name: external-secrets-webhook
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets
  namespace: external-secrets
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/name: external-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: external-secrets
        app.kubernetes.io/version: v0.12.1
        helm.sh/chart: external-secrets-0.12.1
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --concurrent=1
        - --metrics-addr=:8080
        - --loglevel=info
        - --zap-time-encoding=epoch
        image: oci.external-secrets.io/external-secrets/external-secrets:v0.12.1
        imagePullPolicy: IfNotPresent
        name: external-secrets
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      dnsPolicy: ClusterFirst
      hostNetwork: false
      serviceAccountName: external-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-cert-controller
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-cert-controller
  namespace: external-secrets
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/name: external-secrets-cert-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: external-secrets-cert-controller
        app.kubernetes.io/version: v0.12.1
        helm.sh/chart: external-secrets-0.12.1
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - certcontroller
        - --crd-requeue-interval=5m
        - --service-name=external-secrets-webhook
        - --service-namespace=external-secrets
        - --secret-name=external-secrets-webhook
        - --secret-namespace=external-secrets
        - --metrics-addr=:8080
        - --healthz-addr=:8081
        - --loglevel=info
        - --zap-time-encoding=epoch
        image: oci.external-secrets.io/external-secrets/external-secrets:v0.12.1
        imagePullPolicy: IfNotPresent
        name: cert-controller
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 20
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      hostNetwork: false
      serviceAccountName: external-secrets-cert-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    helm.sh/chart: external-secrets-0.12.1
  name: external-secrets-webhook
  namespace: external-secrets
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/name: external-secrets-webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: external-secrets
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: external-secrets-webhook
        app.kubernetes.io/version: v0.12.1
        helm.sh/chart: external-secrets-0.12.1
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - webhook
        - --port=10250
        - --dns-name=external-secrets-webhook.external-secrets.svc
        - --cert-dir=/tmp/certs
        - --check-interval=5m
        - --metrics-addr=:8080
        - --healthz-addr=:8081
        - --loglevel=info
        - --zap-time-encoding=epoch
        image: oci.external-secrets.io/external-secrets/external-secrets:v0.12.1
        imagePullPolicy: IfNotPresent
        name: webhook
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 10250
          name: webhook
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 20
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp/certs
          name: certs
          readOnly: true
      hostNetwork: false
      serviceAccountName: external-secrets-webhook
      volumes:
      - name: certs
        secret:
          secretName: external-secrets-webhook
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    external-secrets.io/component: webhook
    helm.sh/chart: external-secrets-0.12.1
  name: externalsecret-validate
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: external-secrets-webhook
      namespace: external-secrets
      path: /validate-external-secrets-io-v1beta1-externalsecret
  failurePolicy: Fail
  name: validate.externalsecret.external-secrets.io
  rules:
  - apiGroups:
    - external-secrets.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - externalsecrets
    scope: Namespaced
  sideEffects: None
  timeoutSeconds: 5
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-secrets-webhook
    app.kubernetes.io/version: v0.12.1
    argocd.argoproj.io/instance: cluster-external-secrets
    external-secrets.io/component: webhook
    helm.sh/chart: external-secrets-0.12.1
  name: secretstore-validate
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: external-secrets-webhook
      namespace: external-secrets
      path: /validate-external-secrets-io-v1beta1-secretstore
  name: validate.secretstore.external-secrets.io
  rules:
  - apiGroups:
    - external-secrets.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secretstores
    scope: Namespaced
  sideEffects: None
  timeoutSeconds: 5
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: external-secrets-webhook
      namespace: external-secrets
      path: /validate-external-secrets-io-v1beta1-clustersecretstore
  name: validate.clustersecretstore.external-secrets.io
  rules:
  - apiGroups:
    - external-secrets.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - clustersecretstores
    scope: Cluster
  sideEffects: None
  timeoutSeconds: 5
