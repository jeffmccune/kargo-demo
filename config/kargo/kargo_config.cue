@extern(embed)
package kargo

import (
	project "kargo.akuity.io/project/v1alpha1"
	warehouse "kargo.akuity.io/warehouse/v1alpha1"
	stage "kargo.akuity.io/stage/v1alpha1"
	"github.com/holos-run/holos/api/core/v1alpha5:core"
)

// Unify data file
_kargo_data: _ @embed(file=kargo.yaml)

// config definition
#Config: {
	namespace: string
	version:   string | *"1.1.1"
	values: {...}

	datafile: string

	chart: core.#Chart & {
		version: string
		repository: {
			name: string
			url:  string
		}
	}
}

// config values
config: #Config & {
	namespace: "kargo"

	datafile: "./config/kargo/kargo.yaml"
	chart: {
		name:    "oci://ghcr.io/akuity/kargo-charts/kargo"
		version: string & _kargo_data.chart.version
	}

	// Holos specific kustomizations
	values: #KargoValues & {
		// Istio handles mTLS for us.
		api: ingress: tls: enabled: false
		// Secret generated by the kargo-secrets holos component.
		api: secret: name: "admin-credentials"
	}

	// These values are specific to the k3d local demo environment and should be
	// changed for production.
	values: {
		controller: serviceAccount: clusterWideSecretReadingEnabled: true
		controller: globalCredentials: namespaces: [config.namespace]
	}
}

// Custom resource definitions to mix into the component config.
#Resources: {
	Project?: [NAME=string]: project.#Project & {
		metadata: name: string | *NAME
		spec: {...}
	}
	Warehouse?: [_]: warehouse.#Warehouse
	Stage?: [_]:     stage.#Stage
}
